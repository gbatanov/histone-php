<?xml version="1.0" encoding="UTF-8"?>
<suites>

    <suite name="map as array">
        <case>
            <input>a {{['s', 't', 'r', 'i', 'n', 'g'][-1]}} b</input>
            <expected>a  b</expected>
        </case>

        <case>
            <input>a {{['s', 't', 'r', 'i', 'n', 'g'][-5]}} b</input>
            <expected>a  b</expected>
        </case>

        <case>
            <input>a {{['s', 't', 'r', 'i', 'n', 'g'][0]}} b</input>
            <expected>a s b</expected>
        </case>

        <case>
            <input>a {{['s', 't', 'r', 'i', 'n', 'g'][1]}} b</input>
            <expected>a t b</expected>
        </case>

        <case>
            <input>a {{['s', 't', 'r', 'i', 'n', 'g'][10]}} b</input>
            <expected>a  b</expected>
        </case>

        <case>
            <input>a {{['s', 't', 'r', 'i', 'n', 'g'][-15]}} b</input>
            <expected>a  b</expected>
        </case>

        <case>
            <input>a {{['|', 123, 3.14, true, false, adsfasdfads, null, 1E3, ['.', '.'], '|']}} b</input>
            <expected>a | 123 3.14 true false null 1000 . . | b</expected>
        </case>

        <case>
            <input>a {{['a', 'b', 2, 3].length}} b {{['a', 'b', 2, 3].length.isUndefined()}} c</input>
            <expected>a  b true c</expected>
        </case>

        <case>
            <input>a {{['length':123].length}} b</input>
            <expected>a 123 b</expected>
        </case>

        <case>
            <input>a {{[].length}} b</input>
            <expected>a  b</expected>
        </case>

        <case>
            <input>a {{[2, 3, 4][1]}} b</input>
            <expected>a 3 b</expected>
        </case>
    </suite>
	<suite name="map as hash">
		
		<case>
			<input>a {{[1: 'v1', 2: 'v2', 3: 'v3', '4': 'v4']}} b</input>
			<expected>a v1 v2 v3 v4 b</expected>
		</case>


		<case>
			<input>a {{[m: undefined]}} b</input>
			<expected>a  b</expected>
		</case>
	
		
		<case>
			<input>a {{[m: undefined].toJSON()}} b</input>
			<expected>a {"m":{}} b</expected>
		</case>
		
		<case>
			<input>a {{[m: undefined, n: undefined].toJSON()}} b</input>
			<expected>a {"m":{},"n":{}} b</expected>
		</case>
		
		<case>
			<input>a {{[m: undefined, n: null].toJSON()}} b</input>
			<expected>a {"m":{},"n":null} b</expected>
		</case>
		
		<case>
			<input>a {{[m: undefined, n: 'bar'].toJSON()}} b</input>
			<expected>a {"m":{},"n":"bar"} b</expected>
		</case>
		
		<case>
			<input>a {{[m: undefined].hasKey('m')}} b</input>
			<expected>a true b</expected>
		</case>
		<case>
			<input>a {{[a: undefined, a: undefined]}} b</input>
			<expected>a  b</expected>
		</case>
		<case>
			<input>a {{[a: undefined, a: undefined].toJSON()}} b</input>
			<expected>a {"a":{}} b</expected>
		</case>
		<case>
			<input>a {{[a: undefined, a: undefined].hasKey('a')}} b</input>
			<expected>a true b</expected>
		</case>
		<case>
			<input>a {{[a: 111, a: undefined]}} b</input>
			<expected>a  b</expected>
		</case>
		<case>
			<input>a {{[a: 111, a: undefined].toJSON()}} b</input>
			<expected>a {"a":{}} b</expected>
		</case>
		<case>
			<input>a {{[a: 111, a: undefined].hasKey('a')}} b</input>
			<expected>a true b</expected>
		</case>
		<case>
			<input>a {{[a: undefined, a: 111]}} b</input>
			<expected>a 111 b</expected>
		</case>
		<case>
			<input>a {{[a: undefined, a: 111].toJSON()}} b</input>
			<expected>a {"a":111} b</expected>
		</case>
		<case>
			<input>a {{[a: undefined, a: 111].hasKey('a')}} b</input>
			<expected>a true b</expected>
		</case>

		<case>
			<input>a {{[a: 111, a: 111]}} b</input>
			<expected>a 111 b</expected>
		</case>
		<case>
			<input>a {{[a: 111, a: 111].toJSON()}} b</input>
			<expected>a {"a":111} b</expected>
		</case>
		<case>
			<input>a {{[a: 111, a: 111].hasKey('a')}} b</input>
			<expected>a true b</expected>
		</case>
	</suite>

	<suite name="map.values">
		
		<case>
			<input>a {{["foo": "bar", "x": "y"].values()}} b</input>
			<expected>a bar y b</expected>
		</case>

		<case>
			<input>a {{["foo": "bar", "x": "y"].values().isMap()}} b</input>
			<expected>a true b</expected>
		</case>

		<case>
			<input>a {{["foo": "bar", "x": "y"].values().size()}} b</input>
			<expected>a 2 b</expected>
		</case>
	</suite>
<!--
	<suite name="map.remove">
		<case>
			<input>a {{[].remove().toJSON()}} b</input>
			<expected>a {} b</expected>
		</case>
		<case>
			<input>a {{[foo: 'bar'].remove().toJSON()}} b</input>
			<expected>a {"foo":"bar"} b</expected>
		</case>
		<case>
			<input>a {{[foo: 'bar'].remove('mmmm').toJSON()}} b</input>
			<expected>a {"foo":"bar"} b</expected>
		</case>
		<case>
			<input>a {{[foo: 'bar', x: 'y', 'hello': 'world'].remove('foo').toJSON()}} b</input>
			<expected>a {"x":"y","hello":"world"} b</expected>
		</case>
		<case>
			<input>a {{[foo: 'bar', x: 'y', 'hello': 'world'].remove('x').toJSON()}} b</input>
			<expected>a {"foo":"bar","hello":"world"} b</expected>
		</case>
		<case>
			<input>a {{[foo: 'bar', x: 'y', 'hello': 'world'].remove('hello').toJSON()}} b</input>
			<expected>a {"foo":"bar","x":"y"} b</expected>
		</case>
		<case>
			<input>a {{[foo: 'bar', x: 'y', 'hello': 'world'].remove('foo', 'hello').toJSON()}} b</input>
			<expected>a {"x":"y"} b</expected>
		</case>
		<case>
			<input>a {{[foo: 'bar', x: 'y', 'hello': 'world'].remove('x', 'hello').toJSON()}} b</input>
			<expected>a {"foo":"bar"} b</expected>
		</case>
		<case>
			<input>a {{[foo: 'bar', x: 'y', 'hello': 'world'].remove('x').toJSON()}} b</input>
			<expected>a {"foo":"bar","hello":"world"} b</expected>
		</case>
	</suite>
-->
	<suite name="map.keys">
		<case>
			<input>a {{["foo": "bar", "x": "y"].keys()}} b</input>
			<expected>a foo x b</expected>
		</case>

		<case>
			<input>a {{["foo": "bar", "x": "y"].keys().isMap()}} b</input>
			<expected>a true b</expected>
		</case>

		<case>
			<input>a {{["foo": "bar", "x": "y"].keys().size()}} b</input>
			<expected>a 2 b</expected>
		</case>
	</suite>

	<suite name="map.hasKey">
		<case>
			<input>a {{["foo": "bar", "x": "y"].hasKey('foo')}} b</input>
			<expected>a true b</expected>
		</case>

		<case>
			<input>a {{["foo": "bar", "x": "y"].hasKey('y')}} b</input>
			<expected>a false b</expected>
		</case>

		<case>
			<input>a {{["foo": "bar", "x": "y"].hasKey('foo').isBoolean()}} b</input>
			<expected>a true b</expected>
		</case>

		<case>
			<input>a {{["123": "bar", "x": "y"].hasKey(123)}} b</input>
			<expected>a true b</expected>
		</case>
	</suite>

    <suite name="map.join">
        <case>
            <input>a {{[2, 3, 4].join()}} b</input>
            <expected>a 234 b</expected>
        </case>

        <case>
            <input>a {{[2, 3, 4].join('|')}} b</input>
            <expected>a 2|3|4 b</expected>
        </case>

        <case>
            <input>a {{[2, 3, 4].join('|').isString()}} b</input>
            <expected>a true b</expected>
        </case>
    </suite>

    <suite name="map.size">
        <case>
            <input>a {{[].size()}} b</input>
            <expected>a 0 b</expected>
        </case>

        <case>
            <input>a {{[2, 3, 4].size()}} b</input>
            <expected>a 3 b</expected>
        </case>

        <case>
            <input>a {{['a':1,'b':2].size()}} b</input>
            <expected>a 2 b</expected>
        </case>

        <case>
            <input>a {{[2, 3, 4].size().isNumber()}} b</input>
            <expected>a true b</expected>
        </case>

    </suite>

    <suite name="map.hasIndex">
        <case>
            <input>a {{[1, 2, 3].hasIndex(0)}} b</input>
            <expected>a true b</expected>
        </case>

        <case>
            <input>a {{[1, 2, 3].hasIndex(10)}} b</input>
            <expected>a false b</expected>
        </case>

        <case>
            <input>a {{[1, 2, 3].hasIndex(2)}} b</input>
            <expected>a true b</expected>
        </case>

        <case>
            <input>a {{[1, 2, 3].hasIndex(2).isBoolean()}} b</input>
            <expected>a true b</expected>
        </case>
    </suite>

    <suite name="map.slice">
        <case>
            <input>a {{[0,1,2,3,4,5,6].slice(0)}} b</input>
            <expected>a 0 1 2 3 4 5 6 b</expected>
        </case>

        <case>
            <input>a {{[0,1,2,3,4,5,6].slice(2)}} b</input>
            <expected>a 2 3 4 5 6 b</expected>
        </case>

        <case>
            <input>a {{[0,1,2,3,4,5,6].slice(100)}} b</input>
            <expected>a  b</expected>
        </case>

        <case>
            <input>a {{[0,1,2,3,4,5,6].slice(-2)}} b</input>
            <expected>a 5 6 b</expected>
        </case>

        <case>
            <input>a {{[0,1,2,3,4,5,6].slice(-100)}} b</input>
            <expected>a 0 1 2 3 4 5 6 b</expected>
        </case>

        <case>
            <input>a {{[0,1,2,3,4,5,6].slice(0,2)}} b</input>
            <expected>a 0 1 b</expected>
        </case>

        <case>
            <input>a {{[0,1,2,3,4,5,6].slice(1,2)}} b</input>
            <expected>a 1 2 b</expected>
        </case>

        <case>
            <input>a {{[0,1,2,3,4,5,6].slice(0,100)}} b</input>
            <expected>a 0 1 2 3 4 5 6 b</expected>
        </case>

        <case>
            <input>a {{[0,1,2,3,4,5,6].slice(1,100)}} b</input>
            <expected>a 1 2 3 4 5 6 b</expected>
        </case>

        <case>
            <input>a {{[0,1,2,3,4,5,6].slice(0,-2)}} b</input>
            <expected>a 0 1 2 3 4 b</expected>
        </case>

        <case>
            <input>a {{[0,1,2,3,4,5,6].slice(1,-2)}} b</input>
            <expected>a 1 2 3 4 b</expected>
        </case>

        <case>
            <input>a {{[0,1,2,3,4,5,6].slice(1,-100)}} b</input>
            <expected>a  b</expected>
        </case>

        <case>
            <input>a {{[0,1,2,3,4,5,6].slice(-4,3)}} b</input>
            <expected>a 3 4 5 b</expected>
        </case>

        <case>
            <input>a {{[0,1,2,3,4,5,6].slice(-5,-2)}} b</input>
            <expected>a 2 3 4 b</expected>
        </case>

        <case>
            <input>a {{[0,1,2,3,4,5,6].slice(1220,0)}} b</input>
            <expected>a  b</expected>
        </case>

        <case>
            <input>a {{[0,1,2,3,4,5,6].slice(1220,0).isMap()}} b</input>
            <expected>a true b</expected>
        </case>

        <case>
            <input>a {{[0,1,2,3,4,5,6].slice(0,-10000)}} b</input>
            <expected>a  b</expected>
        </case>

        <case>
            <input>a {{[0,1,2,3,4,5,6].slice(0,-10000).isMap()}} b</input>
            <expected>a true b</expected>
        </case>
    </suite>

	<suite name="+">
		<case>
			<input>a {{undefined + undefined}} b</input>
			<expected>a  b</expected>
		</case>

		<case>
			<input>a {{undefined + null}} b</input>
			<expected>a null b</expected>
		</case>

		<case>
			<input>a {{undefined + 'string'}} b</input>
			<expected>a string b</expected>
		</case>

		<case>
			<input>a {{undefined + true}} b</input>
			<expected>a true b</expected>
		</case>

		<case>
			<input>a {{undefined + false}} b</input>
			<expected>a false b</expected>
		</case>

		<case>
			<input>a {{undefined + 10}} b</input>
			<expected>a  b</expected>
		</case>

		<case>
			<input>a {{undefined + [1, 2, 3]}} b</input>
			<expected>a 1 2 3 b</expected>
		</case>

		<case>
			<input>a {{undefined + ['foo': 'bar']}} b</input>
			<expected>a bar b</expected>
		</case>

		<case>
			<input>a {{null + undefined}} b</input>
			<expected>a null b</expected>
		</case>

		<case>
			<input>a {{null + null}} b</input>
			<expected>a nullnull b</expected>
		</case>

		<case>
			<input>a {{null + 'string'}} b</input>
			<expected>a nullstring b</expected>
		</case>

		<case>
			<input>a {{null + true}} b</input>
			<expected>a nulltrue b</expected>
		</case>

		<case>
			<input>a {{null + false}} b</input>
			<expected>a nullfalse b</expected>
		</case>

		<case>
			<input>a {{null + 12}} b</input>
			<expected>a  b</expected>
		</case>

		<case>
			<input>a {{null + [1, 2, 3]}} b</input>
			<expected>a null1 2 3 b</expected>
		</case>

		<case>
			<input>a {{null + ['foo': 'bar']}} b</input>
			<expected>a nullbar b</expected>
		</case>

		<case>
			<input>a {{'string' + undefined}} b</input>
			<expected>a string b</expected>
		</case>

		<case>
			<input>a {{'string' + null}} b</input>
			<expected>a stringnull b</expected>
		</case>

		<case>
			<input>a {{'A ' + ' B'}} b</input>
			<expected>a A  B b</expected>
		</case>

		<case>
			<input>a {{'string: ' + true}} b</input>
			<expected>a string: true b</expected>
		</case>

		<case>
			<input>a {{'string: ' + false}} b</input>
			<expected>a string: false b</expected>
		</case>

		<case>
			<input>a {{'10' + 30}} b</input>
			<expected>a 1030 b</expected>
		</case>

		<case>
			<input>a {{'string: ' + [1, 2, 3]}} b</input>
			<expected>a string: 1 2 3 b</expected>
		</case>

		<case>
			<input>a {{'foo - ' + ['foo': 'bar']}} b</input>
			<expected>a foo - bar b</expected>
		</case>

		<case>
			<input>a {{true + undefined}} b</input>
			<expected>a true b</expected>
		</case>

		<case>
			<input>a {{false + undefined}} b</input>
			<expected>a false b</expected>
		</case>

		<case>
			<input>a {{true + null}} b</input>
			<expected>a truenull b</expected>
		</case>

		<case>
			<input>a {{false + null}} b</input>
			<expected>a falsenull b</expected>
		</case>

		<case>
			<input>a {{true + ' - string'}} b</input>
			<expected>a true - string b</expected>
		</case>

		<case>
			<input>a {{false + ' - string'}} b</input>
			<expected>a false - string b</expected>
		</case>

		<case>
			<input>a {{true + ' - string'}} b</input>
			<expected>a true - string b</expected>
		</case>

		<case>
			<input>a {{false + ' - string'}} b</input>
			<expected>a false - string b</expected>
		</case>

		<case>
			<input>a {{true + true}} b</input>
			<expected>a truetrue b</expected>
		</case>

		<case>
			<input>a {{true + false}} b</input>
			<expected>a truefalse b</expected>
		</case>

		<case>
			<input>a {{false + true}} b</input>
			<expected>a falsetrue b</expected>
		</case>

		<case>
			<input>a {{false + false}} b</input>
			<expected>a falsefalse b</expected>
		</case>

		<case>
			<input>a {{true + 10}} b</input>
			<expected>a  b</expected>
		</case>

		<case>
			<input>a {{false + 12}} b</input>
			<expected>a  b</expected>
		</case>

		<case>
			<input>a {{true + [1, 2, 3]}} b</input>
			<expected>a true1 2 3 b</expected>
		</case>

		<case>
			<input>a {{false + [1, 2, 3]}} b</input>
			<expected>a false1 2 3 b</expected>
		</case>

		<case>
			<input>a {{true + ['foo': '-bar']}} b</input>
			<expected>a true-bar b</expected>
		</case>

		<case>
			<input>a {{false + ['foo': '-bar']}} b</input>
			<expected>a false-bar b</expected>
		</case>

		<case>
			<input>a {{10 + undefined}} b</input>
			<expected>a  b</expected>
		</case>

		<case>
			<input>a {{10 + null}} b</input>
			<expected>a  b</expected>
		</case>

		<case>
			<input>a {{10 + ':string'}} b</input>
			<expected>a 10:string b</expected>
		</case>

		<case>
			<input>a {{10 + true}} b</input>
			<expected>a  b</expected>
		</case>

		<case>
			<input>a {{20 + 22}} b</input>
			<expected>a 42 b</expected>
		</case>

		<case>
			<input>a {{20 + [':item']}} b</input>
			<expected>a  b</expected>
		</case>

		<case>
			<input>a {{20 + ['key': ':value']}} b</input>
			<expected>a  b</expected>
		</case>

		<case>
			<input>a {{[1, 2, 3] + undefined}} b</input>
			<expected>a 1 2 3 b</expected>
		</case>

		<case>
			<input>a {{[1, 2, 3] + null}} b</input>
			<expected>a 1 2 3null b</expected>
		</case>

		<case>
			<input>a {{[1, 2, 3] + ' are values'}} b</input>
			<expected>a 1 2 3 are values b</expected>
		</case>

		<case>
			<input>a {{[1, 2, 3] + true}} b</input>
			<expected>a 1 2 3true b</expected>
		</case>

		<case>
			<input>a {{[1, 2, 3] + false}} b</input>
			<expected>a 1 2 3false b</expected>
		</case>

		<case>
			<input>a {{[1, 2, 3] + 10}} b</input>
			<expected>a  b</expected>
		</case>

		<case>
			<input>a {{[1, 2, 3] + [1, 2, 3]}} b</input>
			<expected>a 1 2 3 1 2 3 b</expected>
		</case>

		<case>
			<input>a {{[1, 2] + [3, 4]}} b</input>
			<expected>a 1 2 3 4 b</expected>
		</case>

		<case>
			<input>a {{[3, 4] + [1, 2]}} b</input>
			<expected>a 3 4 1 2 b</expected>
		</case>

		<case>
			<input>a {{[3, 4] + ['foo': 'are values']}} b</input>
			<expected>a 3 4 are values b</expected>
		</case>

		<case>
			<input>a {{['foo': 'bar'] + undefined}} b</input>
			<expected>a bar b</expected>
		</case>

		<case>
			<input>a {{['foo': 'bar'] + null}} b</input>
			<expected>a barnull b</expected>
		</case>

		<case>
			<input>a {{['foo': 'bar', 'x': 'y'] + ' are values'}} b</input>
			<expected>a bar y are values b</expected>
		</case>

		<case>
			<input>a {{['foo': 'bar - '] + true}} b</input>
			<expected>a bar - true b</expected>
		</case>

		<case>
			<input>a {{['foo': 'bar - '] + false}} b</input>
			<expected>a bar - false b</expected>
		</case>

		<case>
			<input>a {{['foo': 'bar - '] + false}} b</input>
			<expected>a bar - false b</expected>
		</case>

		<case>
			<input>a {{['foo': 'bar - '] + 42}} b</input>
			<expected>a  b</expected>
		</case>

		<case>
			<input>a {{['foo': 'values:'] + [1, 2, 3]}} b</input>
			<expected>a values: 1 2 3 b</expected>
		</case>

		<case>
			<input>a {{['foo': 'bar'] + ['x': 'y']}} b</input>
			<expected>a bar y b</expected>
		</case>
	</suite>

</suites>