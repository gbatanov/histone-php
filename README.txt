Для проекта в PHP использовалась следующая структура:
PHP-
	|- main/ папка с проектом
		|- php/ папка с классами проекта
		|- external/ папка с внешними функциями для тестирования (может создаваться в ходе выполнения тестов)
		|- tests/  папка с исходными заданиями для тестирования
			|- evaluator/ папка с исходными заданиями для тестирования исполнительной части
				|- testresources/ папка с ресурсами для тестирования
					|-json/ папка с json-ресурсами для тестирования
						|- *.json json-файлы
					|- tpl/ папка с tpl-ресурсами для тестирования
						|- subfolder/ дополнительные ресурсы
						|- *.tpl шаблоны
					|- txt/ папка с текстовыми ресурсами для тестирования
						|- *.txt текстовые файлы
				|- *.xml xml-описания case-тестов
				|- cases.json  список тестовых для тестирования
			|- parser/ папка с исходными заданиями для тестирования парсерной части
				|- *.xml xml-описания case-тестов
				|- cases.json  список тестовых для тестирования
		|- unittests/  папка с тестами для PHPUnit (повторяет структуру проекта)
			|- PHP
				|- main/
					|- php/
						|- *Test.php тестовые классы соответствующих классов проекта, для приемочного прогона используется только SpondeTest.php, остальные будут использованы для регрессивных тестов соответствующих классов
			|- bootstrap.php инициализационный скрипт PHPUnit
		|- runtest.php скрипт для ручного прогона тестов из командной строки (deprecated)
		|- tests.php скрипт для прогона тестов из IDE разработки (deprecated)
		|- index.php скрипт с примером вызова шаблонизатора (не поддерживается)
		|- TestRunner.class.php основной класс для runtest.php и tests.php (deprecated)
		|- Stream.class.php класс эмуляции схем URI для runtest.php и tests.php (deprecated)
	|- doc/  папка с PHPDoc (создается билдером с целью "doc")
	|- build/ конечная папка работы билдера, содержит при успешном результате архив с классами и XML-файл в формате JUnit.xml
	|- build.xml XML-файл построения
	|- unittest.php php-файл, вызываемый из билдера для прогона приемочных тестов
	|- createunittest.php php-файл, вызываемый из билдера для построения массива данных для DataProvider приемочных тестов (модифицируется файл SpondeTest.php)
	|- README.txt этот файл

Построение вызывается
>phing [цель]
Поскольку build.xml сделан полностью совместимым по синтаксису с Ant, можно "phing" заменить на "ant".

Документация создается с помощью ApiGen (устанавливается в системе через PEAR).
Вызов создания документации:
>phing|ant doc

Массив данных для DataProvider приемочных тестов PHPUnit создается выполнением цели "createtest":
>phing|ant createtest

